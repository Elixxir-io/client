// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fileTransfer2/ftMessages.proto

package fileTransfer2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// NewFileTransfer is transmitted first on the initialization of a file transfer
// to inform the receiver about the incoming file.
type NewFileTransfer struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileType             string   `protobuf:"bytes,2,opt,name=fileType,proto3" json:"fileType,omitempty"`
	TransferKey          []byte   `protobuf:"bytes,3,opt,name=transferKey,proto3" json:"transferKey,omitempty"`
	TransferMac          []byte   `protobuf:"bytes,4,opt,name=transferMac,proto3" json:"transferMac,omitempty"`
	NumParts             uint32   `protobuf:"varint,5,opt,name=numParts,proto3" json:"numParts,omitempty"`
	Size                 uint32   `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Retry                float32  `protobuf:"fixed32,7,opt,name=retry,proto3" json:"retry,omitempty"`
	Preview              []byte   `protobuf:"bytes,8,opt,name=preview,proto3" json:"preview,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewFileTransfer) Reset()         { *m = NewFileTransfer{} }
func (m *NewFileTransfer) String() string { return proto.CompactTextString(m) }
func (*NewFileTransfer) ProtoMessage()    {}
func (*NewFileTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ae154b96911f608, []int{0}
}

func (m *NewFileTransfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewFileTransfer.Unmarshal(m, b)
}
func (m *NewFileTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewFileTransfer.Marshal(b, m, deterministic)
}
func (m *NewFileTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewFileTransfer.Merge(m, src)
}
func (m *NewFileTransfer) XXX_Size() int {
	return xxx_messageInfo_NewFileTransfer.Size(m)
}
func (m *NewFileTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_NewFileTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_NewFileTransfer proto.InternalMessageInfo

func (m *NewFileTransfer) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *NewFileTransfer) GetFileType() string {
	if m != nil {
		return m.FileType
	}
	return ""
}

func (m *NewFileTransfer) GetTransferKey() []byte {
	if m != nil {
		return m.TransferKey
	}
	return nil
}

func (m *NewFileTransfer) GetTransferMac() []byte {
	if m != nil {
		return m.TransferMac
	}
	return nil
}

func (m *NewFileTransfer) GetNumParts() uint32 {
	if m != nil {
		return m.NumParts
	}
	return 0
}

func (m *NewFileTransfer) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *NewFileTransfer) GetRetry() float32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *NewFileTransfer) GetPreview() []byte {
	if m != nil {
		return m.Preview
	}
	return nil
}

func init() {
	proto.RegisterType((*NewFileTransfer)(nil), "parse.NewFileTransfer")
}

func init() { proto.RegisterFile("fileTransfer2/ftMessages.proto", fileDescriptor_7ae154b96911f608) }

var fileDescriptor_7ae154b96911f608 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xbf, 0x4a, 0xc6, 0x30,
	0x14, 0xc5, 0xc9, 0xe7, 0xd7, 0x3f, 0x46, 0x4b, 0x21, 0x38, 0x5c, 0x1c, 0x24, 0x38, 0x65, 0x52,
	0xd0, 0x37, 0x70, 0x70, 0x91, 0x16, 0x09, 0x9d, 0xdc, 0x62, 0xb9, 0x95, 0x82, 0x6d, 0xc3, 0x4d,
	0xb4, 0xd4, 0x77, 0xf6, 0x1d, 0xa4, 0xd1, 0xd6, 0x76, 0xcb, 0xef, 0x9c, 0x93, 0x73, 0xe1, 0xf0,
	0xab, 0xa6, 0x7d, 0xc7, 0x8a, 0x4c, 0xef, 0x1a, 0xa4, 0xbb, 0xdb, 0xc6, 0x17, 0xe8, 0x9c, 0x79,
	0x43, 0x77, 0x63, 0x69, 0xf0, 0x83, 0x88, 0xac, 0x21, 0x87, 0xd7, 0xdf, 0x8c, 0xe7, 0x25, 0x8e,
	0x8f, 0x9b, 0xb0, 0xb8, 0xe4, 0xe9, 0xfc, 0xb9, 0x34, 0x1d, 0x02, 0x93, 0x4c, 0x9d, 0xea, 0x95,
	0x17, 0xaf, 0x9a, 0x2c, 0xc2, 0xe1, 0xdf, 0x9b, 0x59, 0x48, 0x7e, 0xe6, 0xff, 0x3a, 0x9e, 0x70,
	0x82, 0x13, 0xc9, 0xd4, 0xb9, 0xde, 0x4a, 0xdb, 0x44, 0x61, 0x6a, 0x38, 0xee, 0x13, 0x85, 0xa9,
	0xe7, 0xfe, 0xfe, 0xa3, 0x7b, 0x36, 0xe4, 0x1d, 0x44, 0x92, 0xa9, 0x4c, 0xaf, 0x2c, 0x04, 0x3f,
	0xba, 0xf6, 0x0b, 0x21, 0x0e, 0x7a, 0x78, 0x8b, 0x0b, 0x1e, 0x11, 0x7a, 0x9a, 0x20, 0x91, 0x4c,
	0x1d, 0xf4, 0x2f, 0x08, 0xe0, 0x89, 0x25, 0xfc, 0x6c, 0x71, 0x84, 0x34, 0xdc, 0x58, 0xf0, 0x21,
	0x7f, 0xc9, 0x76, 0xc3, 0xbc, 0xc6, 0x61, 0x8e, 0xfb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99,
	0x46, 0x73, 0x93, 0x30, 0x01, 0x00, 0x00,
}
