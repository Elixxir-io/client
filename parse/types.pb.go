// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

/*
Package parse is a generated protocol buffer package.

It is generated from these files:
	types.proto

It has these top-level messages:
	RepeatedOrdering
	DisplayData
	TextMessage
	ChannelMessage
*/
package parse

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TODO: Automatically combine multi-part messages based on these fields
type RepeatedOrdering struct {
	Time       uint64 `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	ChunkIndex uint32 `protobuf:"varint,2,opt,name=chunkIndex" json:"chunkIndex,omitempty"`
	Length     uint32 `protobuf:"varint,3,opt,name=length" json:"length,omitempty"`
}

func (m *RepeatedOrdering) Reset()                    { *m = RepeatedOrdering{} }
func (m *RepeatedOrdering) String() string            { return proto.CompactTextString(m) }
func (*RepeatedOrdering) ProtoMessage()               {}
func (*RepeatedOrdering) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RepeatedOrdering) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *RepeatedOrdering) GetChunkIndex() uint32 {
	if m != nil {
		return m.ChunkIndex
	}
	return 0
}

func (m *RepeatedOrdering) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

type DisplayData struct {
	Color uint64 `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
}

func (m *DisplayData) Reset()                    { *m = DisplayData{} }
func (m *DisplayData) String() string            { return proto.CompactTextString(m) }
func (*DisplayData) ProtoMessage()               {}
func (*DisplayData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DisplayData) GetColor() uint64 {
	if m != nil {
		return m.Color
	}
	return 0
}

// Type 1
type TextMessage struct {
	Order   *RepeatedOrdering `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	Display *DisplayData      `protobuf:"bytes,2,opt,name=display" json:"display,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *TextMessage) Reset()                    { *m = TextMessage{} }
func (m *TextMessage) String() string            { return proto.CompactTextString(m) }
func (*TextMessage) ProtoMessage()               {}
func (*TextMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TextMessage) GetOrder() *RepeatedOrdering {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *TextMessage) GetDisplay() *DisplayData {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *TextMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Type 2
type ChannelMessage struct {
	Order     *RepeatedOrdering `protobuf:"bytes,1,opt,name=order" json:"order,omitempty"`
	Display   *DisplayData      `protobuf:"bytes,2,opt,name=display" json:"display,omitempty"`
	SpeakerID []byte            `protobuf:"bytes,3,opt,name=speakerID,proto3" json:"speakerID,omitempty"`
	Message   string            `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
}

func (m *ChannelMessage) Reset()                    { *m = ChannelMessage{} }
func (m *ChannelMessage) String() string            { return proto.CompactTextString(m) }
func (*ChannelMessage) ProtoMessage()               {}
func (*ChannelMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ChannelMessage) GetOrder() *RepeatedOrdering {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *ChannelMessage) GetDisplay() *DisplayData {
	if m != nil {
		return m.Display
	}
	return nil
}

func (m *ChannelMessage) GetSpeakerID() []byte {
	if m != nil {
		return m.SpeakerID
	}
	return nil
}

func (m *ChannelMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*RepeatedOrdering)(nil), "parse.RepeatedOrdering")
	proto.RegisterType((*DisplayData)(nil), "parse.DisplayData")
	proto.RegisterType((*TextMessage)(nil), "parse.TextMessage")
	proto.RegisterType((*ChannelMessage)(nil), "parse.ChannelMessage")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x91, 0xc1, 0x4a, 0xc4, 0x30,
	0x18, 0x84, 0x89, 0xb6, 0x5b, 0xf6, 0x8f, 0x8a, 0xfc, 0x88, 0xf6, 0x20, 0xb2, 0xd4, 0xcb, 0x1e,
	0xb4, 0x87, 0xf5, 0x0d, 0xb4, 0x97, 0x3d, 0x88, 0x10, 0x3c, 0x79, 0x10, 0xe2, 0xf6, 0xa7, 0x2d,
	0xdb, 0x4d, 0x42, 0x12, 0x61, 0xf7, 0xee, 0xab, 0xf8, 0x9e, 0x62, 0xd2, 0xc5, 0xea, 0x03, 0x78,
	0xcb, 0x4c, 0x26, 0x99, 0x0f, 0x06, 0xb8, 0xdf, 0x19, 0x72, 0xa5, 0xb1, 0xda, 0x6b, 0x4c, 0x8d,
	0xb4, 0x8e, 0x8a, 0x57, 0x38, 0x15, 0x64, 0x48, 0x7a, 0xaa, 0x9f, 0x6c, 0x4d, 0xb6, 0x53, 0x0d,
	0x22, 0x24, 0xbe, 0xdb, 0x50, 0xce, 0x66, 0x6c, 0x9e, 0x88, 0x70, 0xc6, 0x2b, 0x80, 0x55, 0xfb,
	0xae, 0xd6, 0x4b, 0x55, 0xd3, 0x36, 0x3f, 0x98, 0xb1, 0xf9, 0xb1, 0x18, 0x39, 0x78, 0x0e, 0x93,
	0x9e, 0x54, 0xe3, 0xdb, 0xfc, 0x30, 0xdc, 0x0d, 0xaa, 0xb8, 0x06, 0x5e, 0x75, 0xce, 0xf4, 0x72,
	0x57, 0x49, 0x2f, 0xf1, 0x0c, 0xd2, 0x95, 0xee, 0xb5, 0x1d, 0xfe, 0x8e, 0xa2, 0xf8, 0x60, 0xc0,
	0x9f, 0x69, 0xeb, 0x1f, 0xc9, 0x39, 0xd9, 0x10, 0xde, 0x42, 0xaa, 0xbf, 0x61, 0x42, 0x8a, 0x2f,
	0x2e, 0xca, 0xc0, 0x5a, 0xfe, 0x05, 0x15, 0x31, 0x85, 0x37, 0x90, 0xd5, 0xb1, 0x23, 0x80, 0xf1,
	0x05, 0x0e, 0x0f, 0x46, 0xcd, 0x62, 0x1f, 0xc1, 0x1c, 0xb2, 0x4d, 0xec, 0x09, 0xa8, 0x53, 0xb1,
	0x97, 0xc5, 0x27, 0x83, 0x93, 0x87, 0x56, 0x2a, 0x45, 0xfd, 0xbf, 0x90, 0x5c, 0xc2, 0xd4, 0x19,
	0x92, 0x6b, 0xb2, 0xcb, 0x2a, 0xb0, 0x1c, 0x89, 0x1f, 0x63, 0xcc, 0x99, 0xfc, 0xe2, 0xbc, 0xcf,
	0x5e, 0xe2, 0x78, 0x6f, 0x93, 0x30, 0xe5, 0xdd, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x90,
	0xb8, 0x85, 0xd9, 0x01, 0x00, 0x00,
}
