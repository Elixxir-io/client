include: 
  - 'https://git.xx.network/elixxir/ci-templates/-/raw/master/before_script-go-project.yml'
  - 'https://git.xx.network/elixxir/ci-templates/-/raw/master/test-go-project.yml'
  - 'https://git.xx.network/elixxir/ci-templates/-/raw/master/build-go-project.yml'

stages:
  - test
  - build
  - trigger_integration

# The before_script def is imported from 'https://git.xx.network/elixxir/ci-templates/-/raw/master/before_script-go-project.yml'
# The test job is imported from 'https://git.xx.network/elixxir/ci-templates/-/raw/master/test-go-project.yml'

build:
  stage: build
  image: $DOCKER_IMAGE
  except:
    - tags
  # The main script is imported from 'https://git.xx.network/elixxir/ci-templates/-/raw/master/build-go-project.yml'
  after_script:
    - /upload-artifacts.sh release/
  artifacts:
    paths:
     - release/

tag:
    stage: trigger_integration
    only:
        - master
    image: $DOCKER_IMAGE
    script:
        - git remote add origin_tags git@$GITLAB_SERVER:elixxir/client.git || true
        - git tag $(release/client.linux64 version | grep "Elixxir Client v"| cut -d ' ' -f3) -f
        - git push origin_tags -f --tags

bindings-ios:
  stage: build
  dependencies: []
  except:
    - tags
  tags:
    - ios
  script:
    - export PATH=$PATH:$HOME/go/bin
    - go mod tidy
    - rm -rf vendor/
    - go build ./...
    - go get golang.org/x/mobile/bind
    - go install golang.org/x/mobile/cmd/gomobile@latest
    - gomobile init
    - gomobile bind -target ios gitlab.com/elixxir/client/bindings
    - ls
    - zip -r iOS.zip Bindings.xcframework
  artifacts:
    paths:
      - iOS.zip

bindings-android:
  stage: build
  dependencies: []
  except:
    - tags
  tags:
    - android
  script:
    - export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin:/android-sdk/platform-tools/
    - export ANDROID_HOME=/android-sdk
    # Build the bindings
    - go mod tidy
    - rm -rf vendor/
    - go build ./...
    - go get golang.org/x/mobile/bind
    - go install golang.org/x/mobile/cmd/gomobile@latest
    - gomobile init
    - gomobile bind -target android -androidapi 21 gitlab.com/elixxir/client/bindings
  artifacts:
    paths:
      - bindings.aar
      - bindings-sources.jar

# This pipeline job will attempt to have pkg.go.dev update docs for client/xxdk.
#
# pkg.go.dev relies on the proxy.golang.org service (go module cache/proxy) to discover versions of 
# Go modules to make docs of. The proxy keeps a list of all known versions of Go modules. The go 
# mod proxy does cache pulls for about 30 minutes, so if quickly successive commits are done in 
# master/release, this will fail to pull the latest client, and the docs will not update.
trigger-doc-update:
  stage: trigger_integration
  image: $DOCKER_IMAGE
  script:
    # We use GOPRIVATE blank because not want to directly pull client, we want to use the public cache.
    - GOPRIVATE="" go install gitlab.com/elixxir/client@$CI_COMMIT_REF_NAME
  only:
    - release
    - master

trigger-integration:
  stage: trigger_integration
  trigger:
    project: elixxir/integration
    branch: $CI_COMMIT_REF_NAME
  only:
    - master
    - release

trigger-udb:
  stage: trigger_integration
  trigger:
    project: elixxir/user-discovery-bot
    branch: $CI_COMMIT_REF_NAME
  only:
    - master
    - release
